import { Context, Markup, Telegraf } from "telegraf";
import { logEvent, logPageView } from "../services/analytics-service";
import { changeUserInfo } from "./user-info-change";
import { adminUsername } from "../env";

export const defaultKeyboard = Markup.keyboard([["–°–µ–≥–æ–¥–Ω—è"], ["–í—á–µ—Ä–∞", "–ó–∞–≤—Ç—Ä–∞"], ["–ù–∞ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏", "‚ú® –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ ‚ú®"]]).resize();
export const settingsKeyboard = Markup.keyboard([["‚¨ÖÔ∏è –ù–∞–∑–∞–¥Ô∏è"], ["–ò–∑–º–µ–Ω–∏—Ç—å –∫–ª–∞—Å—Å"], ["–†–µ–π—Ç–∏–Ω–≥ –∫–ª–∞—Å—Å–æ–≤Ô∏è"], ["–û—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å"]]).resize();

export function bindGeneral(bot: Telegraf) {
  bot.start((ctx: Context) => {
    logEvent(ctx, "start_command");
    ctx.reply("–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –Ø —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –õ–∏—Ü–µ—è 50 –ø—Ä–∏ –î–ì–¢–£")
      .then(() => changeUserInfo(ctx as any));
  });

  bot.help(ctx => {
    logEvent(ctx, "help_command");
    ctx.reply(`–ë–æ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π –õ–∏—Ü–µ—è 50 –ø—Ä–∏ –î–ì–¢–£. –ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º –ø–∏—Å–∞—Ç—å @${adminUsername}`);
  });

  bot.hears("‚ú® –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ", ctx => replyWithSettings(ctx, true)); // Temp
  bot.hears("‚ú® –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ ‚ú®", ctx => replyWithSettings(ctx, false));
  bot.hears("‚¨ÖÔ∏è –ù–∞–∑–∞–¥Ô∏è", ctx => ctx.reply("–û–ö", defaultKeyboard));
}

function replyWithSettings(ctx: Context, isOldCall: boolean) {
  logPageView(ctx, "/settings");
  if (isOldCall) ctx.reply("–ù–∞—Å—Ç—Ä–æ–π–∫–∏. üÜï –ü–æ—è–≤–∏–ª–∞—Å—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å, –∂–¥—É –≤–∞—à –æ—Ç–∑—ã–≤!", settingsKeyboard).then();
  else ctx.reply("–ù–∞—Å—Ç—Ä–æ–π–∫–∏", settingsKeyboard).then();
}
